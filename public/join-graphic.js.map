{"version":3,"sources":["webpack:///webpack/bootstrap ef4149c724e5920aa985?293f***","webpack:///./app/join-graphic.js","webpack:///./app/round-chart.js","webpack:///./app/histogram.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAc;AACd;AACA;;AAEA;AACA,IAAG,mDAAmD;AACtD,IAAG,mDAAmD;AACtD,IAAG,oDAAoD;AACvD,IAAG,kDAAkD;AACrD,IAAG,mDAAmD;AACtD,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC,iBAAiB,GAAG,gCAAgC;;AAE1F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,oBAAoB;AAC9C;;AAEA,+DAA8D,0BAA0B;AACxF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,8CAA6C,0BAA0B;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB,iBAAgB;AAChB,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrJA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,YAAY,GAAG,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAwC,YAAY;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,sBAAsB;;AAEnE;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"join-graphic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ef4149c724e5920aa985\n **/","/**\r\n * Created by Rusak Oleg on 07.05.2016.\r\n */\r\n\r\n/* global d3*/\r\n\r\nlet RoundChart = require('./round-chart.js')\r\nlet Histogram = require('./histogram.js')\r\n\r\nlet margin = {top: 50, left: 30, bottom: 40, right: 30}\r\nlet width = 500 - margin.left - margin.right\r\nlet height = 400 - margin.top - margin.bottom\r\n\r\nlet data = [\r\n  {name: 'A', value: '15', value1: '40', value2: '10'},\r\n  {name: 'B', value: '20', value1: '50', value2: '20'},\r\n  {name: 'C', value: '40', value1: '110', value2: '40'},\r\n  {name: 'D', value: '15', value1: '5', value2: '10'},\r\n  {name: 'E', value: '60', value1: '20', value2: '60'},\r\n  {name: 'F', value: '30', value1: '70', value2: '30'}\r\n]\r\ndata = dataInit(data)\r\n\r\nlet color = d3.scale.category10()\r\n\r\nlet roundChar = new RoundChart(data[0], color, width, height, margin)\r\nroundChar.draw()\r\n\r\naddCallText(roundChar, 'Mouse over!')\r\n\r\nlet histogram = new Histogram(data, color, width, height, margin)\r\nhistogram.callbackBarMouseClick = handlerMouseClick\r\nhistogram.draw()\r\n\r\naddCallText(histogram, 'Mouse click!')\r\n\r\n//  Function wasteland-------------------------\r\n\r\nfunction handlerMouseClick () {\r\n  let event = d3.event\r\n  let groupRectangle = d3.select(event.target.parentNode)\r\n  //  get first element in sample\r\n  let dataGroupRectangle = groupRectangle.data()[0]\r\n\r\n  roundChar.updateData(dataGroupRectangle)\r\n}\r\n\r\nfunction dataInit () {\r\n  return data.map((row) => {\r\n    let values = Object.keys(row).filter((key) => key !== 'name').map((key) => +row[key])\r\n    let total = values.reduce((total, value) => total + value, 0)\r\n    return {\r\n      name: row.name,\r\n      values: values,\r\n      total: total\r\n    }\r\n  })\r\n}\r\n\r\nfunction addCallText (graphic, text) {\r\n  let canvas = graphic.canvas\r\n  canvas.append('text')\r\n    .attr('x', graphic.width / 2)\r\n    .attr('y', 20)\r\n    .attr('text-anchor', 'middle')\r\n    .text(text)\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/join-graphic.js\n ** module id = 0\n ** module chunks = 4\n **/","/**\n * Created by Rusak Oleg on 22.04.2016.\n */\n\n/* global d3*/\n\nclass RoundChart {\n  constructor (dataRow, color, width, height, margin) {\n    let radius = Math.min(width, height) / 2\n\n    this.data = dataRow\n    this.arc = d3.svg.arc()\n      .outerRadius(radius - 10)\n      .innerRadius(0)\n    this.arcLarger = d3.svg.arc()\n      .outerRadius(radius)\n      .innerRadius(0)\n    this.arcLabel = d3.svg.arc()\n      .outerRadius(radius - 40)\n      .innerRadius(radius - 40)\n    this.pie = d3.layout.pie()\n      .sort(null)\n    this.color = color\n    this.height = height\n    this.width = width\n    this.margin = margin\n\n    this.pieContainer = null\n    this.canvas = null\n  }\n\n  draw () {\n    let margin = this.margin\n    //  Canvas\n    let canvas = d3.select('.container').append('svg')\n      .attr('width', this.width + margin.left + margin.right)\n      .attr('height', this.height + margin.top + margin.bottom)\n    this.canvas = canvas\n\n    let pieContainer = canvas\n      .append('g')\n      .attr('class', 'pie-container')\n      .attr('transform', `translate(${(this.width / 2)},${(this.height / 2) + margin.left})`)\n\n    this.pieContainer = pieContainer\n\n    let tooltip = d3.select('body').append('div')\n      .attr('class', 'tooltip')\n\n    let handlerMouseOverArc = this.handlerMouseOver.bind(this, tooltip, this.arcLarger, this.data)\n    let handlerMouseOutArc = this.handlerMouseOut.bind(this, tooltip, this.arc)\n    let arcs = pieContainer.selectAll('.arc')\n      .data(this.pie(this.data.values))\n      .enter().append('g')\n      .attr('class', 'arc')\n      .on('mouseover', handlerMouseOverArc, false)\n      .on('mouseout', handlerMouseOutArc)\n\n    arcs.append('path')\n      .attr('d', this.arc)\n      .each(function (d) { this._current = d })\n      .style('fill', (d, i) => this.color(i))\n\n    arcs.append('text').attr('transform', (d) => `translate(${this.arcLabel.centroid(d)})`)\n      .attr('dy', '.35em')\n      .text((d) => d.data)\n      .style('fill', '#fff')\n  }\n\n  updateData (dataRow) {\n    let pieContainer = this.pieContainer\n    //  check what draw method called before\n    if (!pieContainer) {\n      return\n    }\n\n    let data = dataRow.values\n    let pie = d3.layout.pie()\n      .sort(null)\n\n    pieContainer.selectAll('.arc')\n      .data(pie(data))\n\n    let arc = this.arc\n    pieContainer.selectAll('path').data(pie(data))\n      .transition()\n      .duration(300)\n      .attrTween('d', function (a) {\n        let i = d3.interpolate(this._current, a)\n        this._current = i(0)\n        return (t) => arc(i(t))\n      })\n\n    pieContainer.selectAll('text').data(pie(data))\n      .style('opacity', 0)\n      .attr('transform', (d) => `translate(${this.arcLabel.centroid(d)})`)\n      .attr('dy', '.35em')\n      .text((d) => d.data)\n      .transition()\n      .duration(800)\n      .style('opacity', 1)\n  }\n\n  handlerMouseMove (tooltip) {\n    let event = d3.event\n\n    tooltip\n      .style({\n        top: event.pageY + 'px',\n        left: event.pageX + 'px'\n      })\n  }\n\n  handlerMouseOver (tooltip, arcLarger, data, element) {\n    let event = d3.event\n    let arcTarget = d3.select(event.target)\n\n    arcTarget.on('mousemove', this.handlerMouseMove.bind(null, tooltip))\n      .transition()\n      .duration(400)\n      .attr('d', arcLarger)\n\n    tooltip\n      .style('top', (event.pageY) + 'px')\n      .style('left', (event.pageX) + 'px')\n      .html(`Value: ${element.value}\n      Column: ${data.name}\n      Total: ${data.total}`)\n      .transition()\n      .duration(300)\n      .style('opacity', 1)\n  }\n\n  handlerMouseOut (tooltip, arc) {\n    let event = d3.event\n\n    let arcTarget = d3.select(event.target)\n    arcTarget.on('mousemove', null)\n      .transition()\n      .duration(300)\n      .attr('d', arc)\n\n    tooltip\n      .transition()\n      .duration(300)\n      .style('opacity', 0)\n  }\n}\n\nmodule.exports = RoundChart\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/round-chart.js\n ** module id = 1\n ** module chunks = 4\n **/","/**\n * Created by Rusak Oleg on 07.05.2016.\n */\n\n/* global d3*/\n\nclass Histogram {\n  constructor (data, color, width, height, margin) {\n    this.data = data\n\n    this.keyScale = d3.scale.ordinal()\n      .rangeBands([0, width], '.1')\n      .domain(data.map((d) => d.name))\n\n    let keyRectDomain = data[0].values.map((value, i) => i)\n    this.keyScaleRect = d3.scale.ordinal()\n      .rangeBands([0, this.keyScale.rangeBand()])\n      .domain(keyRectDomain)\n    this.keyRectDomain = keyRectDomain\n\n    let valueDomainMax = d3.max(data.reduce((values, row) => {\n      return values.concat(row.values)\n    }, []))\n    this.valueScale = d3.scale.linear()\n      .range([height, 0])\n      .domain([0, valueDomainMax])\n\n    this.color = color\n    this.height = height\n    this.width = width\n    this.margin = margin\n\n    this.callbackBarMouseClick  = null\n  }\n\n  draw () {\n    let margin = this.margin\n    //  Canvas\n    let canvas = d3.select('.container').append('svg')\n      .attr('width', this.width + margin.left + margin.right)\n      .attr('height', this.height + margin.top + margin.bottom)\n    this.canvas = canvas\n\n    let histogramContainer = canvas.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n      .attr('class', 'histogram-container')\n\n    //  Axis X and Y\n    let axisX = d3.svg.axis().scale(this.keyScale)\n      .orient('bottom')\n      .tickSize(0)\n      .tickPadding(20)\n\n    let axisY = d3.svg.axis().scale(this.valueScale)\n      .orient('left')\n\n    histogramContainer.append('g')\n      .attr('class', 'key axis')\n      .attr('transform', `translate(0,${this.height})`)\n      .call(axisX)\n\n    histogramContainer.append('g')\n      .attr('class', 'value axis')\n      .attr('transform', 'translate(0,0)')\n      .call(axisY)\n\n    //  Bar\n    let barGroup = histogramContainer.selectAll('.bars')\n      .data(this.data)\n      .enter().append('g')\n      .attr('class', '.bars')\n      .attr('transform', (d) => `translate(${this.keyScale(d.name)}, 0)`)\n\n    barGroup.selectAll('.bar')\n      .data((d) => {\n        return d.values\n      })\n      .enter().append('rect')\n      .on('click', this.handlerBarMouseClick.bind(this))\n      .attr('class', 'bar')\n      .attr('transform', (d, i) => {\n        return 'translate(' + this.keyScaleRect(this.keyRectDomain[i]) + ',' + this.valueScale(Math.max(0, d)) + ')'\n      })\n      .attr('height', 0)\n      .transition()\n      .duration(2000)\n      .attr('width', this.keyScaleRect.rangeBand())\n      .attr('height', (d) => {\n        return Math.abs(this.valueScale(d) - this.valueScale(0))\n      })\n      .attr('fill', (d, i) => this.color(this.keyRectDomain[i]))\n\n    barGroup.selectAll('text')\n      .data((d) => {\n        return d.values\n      })\n      .enter().append('text')\n      .attr('transform', (d, i) => {\n        return 'translate(' + (this.keyScaleRect(this.keyRectDomain[i]) +\n          this.keyScaleRect.rangeBand() / 2) + ',' +\n          this.valueScale(d) + ')'\n      })\n      .attr('dy', (d) => {\n        return d < 0 ? '1.0em' : '-0.3em'\n      })\n      .style('fill', '#000')\n      .style('text-anchor', 'middle')\n      .style('font-size', '10pt')\n      .text((d) => d)\n  }\n\n  handlerBarMouseClick () {\n    if (this.callbackBarMouseClick) {\n      this.callbackBarMouseClick()\n    }\n  }\n}\n\nmodule.exports = Histogram\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/histogram.js\n ** module id = 2\n ** module chunks = 4\n **/"],"sourceRoot":""}